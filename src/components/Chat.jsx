import React, { useState, useEffect } from "react";

const Chat = () => {
  const [messages, setMessages] = useState([
    {
      id: 1,
      text: "–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –º–Ω–µ –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –≤–æ–∑–≤—Ä–∞—Ç–∞.",
      sender: "client",
    },
    {
      id: 2,
      text: "–í—ã –ø–æ–∑–≤–æ–Ω–∏–ª–∏ chatbot Supportzen. –ú–µ–Ω—è –∑–æ–≤—É—Ç –ò–≤–∞–Ω.",
      sender: "operator",
    },
  ]);

  const quickReplies = [
    "–ö–æ–Ω–µ—á–Ω–æ! –Ø –±—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å –≤–∞–º.",
    "–ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.",
    "–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –∫–∞–∫–∏–µ-–ª–∏–±–æ –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã?",
  ];

  const [input, setInput] = useState("");
  const [status, setStatus] = useState("–û—Ç–∫—Ä—ã—Ç");
  const [logs, setLogs] = useState([]);
  const [category, setCategory] = useState("–ü–ª–∞—Ç–µ–∂–∏");
  const [subcategory, setSubcategory] = useState("–í–æ–∑–≤—Ä–∞—Ç—ã");

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π
  const logAction = (action) => {
    setLogs((prev) => [
      ...prev,
      { time: new Date().toLocaleTimeString(), action },
    ]);
  };

  const sendMessage = () => {
    if (!input.trim()) return;
    setMessages([
      ...messages,
      { id: Date.now(), text: input, sender: "operator" },
    ]);
    logAction(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: "${input}"`);
    setInput("");
  };

  const insertQuickReply = (reply) => {
    setInput(reply);
    logAction(`–í—ã–±—Ä–∞–Ω–∞ –±—ã—Å—Ç—Ä–∞—è —Ñ—Ä–∞–∑–∞: "${reply}"`);
  };

  const handleStatusChange = (e) => {
    const newStatus = e.target.value;
    setStatus(newStatus);
    logAction(`–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞: ${newStatus}`);
  };

  const handleCall = () => {
    logAction("–ò–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞–Ω –≥–æ–ª–æ—Å–æ–≤–æ–π –≤—ã–∑–æ–≤ —Å –∫–ª–∏–µ–Ω—Ç–æ–º");
  };

  const handleConnect = () => {
    logAction("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º");
  };

  // –ü—Ä–æ—Å—Ç–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ (–¥–ª–∏–Ω–Ω—ã–µ —Å–ª–æ–≤–∞)
  const highlightTypos = (text) => {
    return text.split(" ").map((word, i) => {
      if (word.length > 12)
        return (
          <span key={i} className="typo">
            {word + " "}
          </span>
        );
      return word + " ";
    });
  };

  return (
    <div className="chat">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
      <div className="chat-header">
        <div>
          <p className="chat-title">–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤? (MH5609)</p>
          <p className="chat-meta">
            –ö–∞—Ç–µ–≥–æ—Ä–∏—è: <strong>{category}</strong> | –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è:{" "}
            <strong>{subcategory}</strong>
          </p>
          <label>
            –°—Ç–∞—Ç—É—Å:{" "}
            <select value={status} onChange={handleStatusChange}>
              <option>–û—Ç–∫—Ä—ã—Ç</option>
              <option>–í –æ–±—Ä–∞–±–æ—Ç–∫–µ</option>
              <option>–†–µ—à—ë–Ω</option>
              <option>–ó–∞–∫—Ä—ã—Ç</option>
            </select>
          </label>
        </div>
        <div className="chat-actions">
          <button onClick={handleCall}>üìû</button>
          <button onClick={handleConnect}>üîÅ</button>
          <button className="close">–ó–∞–∫—Ä—ã—Ç—å</button>
        </div>
      </div>

      {/* –°–æ–æ–±—â–µ–Ω–∏—è */}
      <div className="chat-body">
        {messages.map((msg) => (
          <div key={msg.id} className={`message ${msg.sender}`}>
            {highlightTypos(msg.text)}
          </div>
        ))}
      </div>

      {/* –ë—ã—Å—Ç—Ä—ã–µ —Ñ—Ä–∞–∑—ã */}
      <div className="chat-replies">
        {quickReplies.map((reply, idx) => (
          <button key={idx} onClick={() => insertQuickReply(reply)}>
            {reply}
          </button>
        ))}
      </div>

      {/* –í–≤–æ–¥ */}
      <div className="chat-input">
        <input
          type="text"
          placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
          value={input}
          onChange={(e) => setInput(e.target.value)}
        />
        <button onClick={sendMessage}>‚û°Ô∏è</button>
      </div>

      {/* –ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π */}
      {/* <div className="chat-logs">
        <h4>–ò—Å—Ç–æ—Ä–∏—è –¥–µ–π—Å—Ç–≤–∏–π</h4>
        <ul>
          {logs.map((log, i) => (
            <li key={i}>
              <strong>{log.time}</strong> ‚Äî {log.action}
            </li>
          ))}
        </ul>
      </div> */}
    </div>
  );
};

export default Chat;
